{"version":3,"sources":["Header.tsx","funcs.tsx","Slider.tsx","App.tsx","index.tsx"],"names":["Header","className","href","type","data-toggle","data-target","id","fetchSliderData","fileName","a","options","method","headers","body","JSON","stringify","fetch","then","res","json","Slider","props","useState","sliderData","updateSliderData","useEffect","makeButton","title","source","onClick","buttons","len","length","titleAtIdx","idx","sourceAtIdx","Array","fill","reduce","acc","i","concat","makeButtons","children","App","sliders","updateSliders","handleClick","newSliders","slice","map","sliderProps","ReactDOM","render","document","getElementById"],"mappings":"uLA2BeA,EAzBA,WAEX,OACI,sBAAKC,UAAY,0BAAjB,UACI,mBAAGA,UAAU,eAAeC,KAAK,aAAjC,kBACA,wBAAQD,UAAU,6BAA6BE,KAAK,SAASC,cAAY,WAAWC,cAAY,mBAAhG,SACI,sBAAMJ,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BK,GAAG,kBAA7C,SACI,qBAAIL,UAAU,aAAd,UACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,aAA7B,oBAEJ,oBAAID,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,aAA7B,wBAEJ,oBAAID,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,aAA7B,8B,uBCCTK,EAlBM,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACdC,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,kCAEpBC,KAAMC,KAAKC,UAAU,CACjB,KAASP,KARG,kBAahBQ,MAAM,4BAA6BN,GAClCO,MAAK,SAACC,GAAD,OAASA,EAAIC,WAdH,2CAAH,sDCgDNC,EA9CA,SAACC,GACf,IAAD,EAC2CC,mBAAS,CAAC,MAAS,GAAI,SAAY,CAAC,CAAC,MAAS,GAAI,OAAU,OADvG,mBACWC,EADX,KACuBC,EADvB,KAGIC,qBAAU,WACNlB,EAAgBc,EAAMb,UACrBS,KAAKO,KACP,IAEH,IAAME,EAAa,SAACC,EAAcC,GAC9B,OACI,wBAAQ3B,UAAY,eAAe4B,QAAW,kBAAMR,EAAMQ,QAAQD,IAAlE,SACKD,KAqBb,OACI,qBAAK1B,UAAY,yBAAjB,SACI,sBAAMA,UAAY,MAAlB,UACI,qBAAKA,UAAY,aACjB,sBAAKA,UAAY,gCAAjB,cAAmDsB,EAAWI,MAA9D,OACA,qBAAK1B,UAAY,wBAAjB,SArBQ,SAAC6B,GACjB,IAAMC,EAAMD,EAAQE,OAEdC,EAAa,SAACC,GAAD,OAAiBA,EAAMH,EAAMD,EAAQI,GAAKP,MAAQ,IAC/DQ,EAAc,SAACD,GAAD,OAAiBA,EAAMH,EAAMD,EAAQI,GAAKN,OAAS,IAEvE,OAAOQ,MAJUL,EAAM,GAAKA,EAAM,GAAK,EAAIA,EAAM,GAI1BM,KAAK,GAAGC,QAAO,SAACC,EAAK9B,EAAG+B,GAC3C,OAAOD,EAAIE,OAAO,CACd,gCACMf,EAAWO,EAAW,EAAIO,GAAIL,EAAY,EAAIK,IAC9Cd,EAAWO,EAAW,EAAIO,EAAI,GAAIL,EAAY,EAAIK,EAAI,WAGjE,IASWE,CAAYnB,EAAWoB,kBCJ9BC,EA/BH,WACX,IAAD,EACqCtB,mBAAS,CAAC,CAAC,SAAa,eAD7D,mBACWuB,EADX,KACoBC,EADpB,KAIUC,EAAc,SAACvC,GACjB,IAAMwC,EAAaH,EAAQI,QAAQR,OAAO,CACtC,CAAC,SAAYjC,KAGjBsC,EAAcE,IAalB,OACI,gCACI,cAAC,EAAD,IACEH,EAAQK,KAbG,SAACC,GAClB,OACI,cAAC,EAAD,CAEI3C,SAAa2C,EAAY3C,SACzBqB,QAAYkB,GAFJI,EAAY3C,iBCnBpC4C,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.be609eea.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => \n{\n    return (\n        <nav className = \"navbar navbar-expand-md\">\n            <a className=\"navbar-brand\" href=\"index.html\">VIVA</a>\n            <button className=\"navbar-toggler navbar-dark\" type=\"button\" data-toggle=\"collapse\" data-target=\"#main-navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"main-navigation\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"index.html\">Home</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"index.html\">Projects</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"index.html\">About</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","import {sliderDataType} from './Types'\n\nconst fetchSliderData = async (fileName: string): Promise<sliderDataType> => {\n    const options = {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n        },\n        body: JSON.stringify({\n            \"file\" : fileName\n        })\n    };\n\n    return (\n        fetch(\"http://localhost:3000/api\", options)\n        .then((res) => res.json())\n    );\n}\n\nexport default fetchSliderData","import React, { useEffect, useState } from 'react'\nimport {sliderPropsType, buttonPropsType} from './Types'\nimport fetchSliderData from './funcs'\n\nconst Slider = (props: sliderPropsType) => \n{\n    const [sliderData, updateSliderData] = useState({\"title\": \"\", \"children\": [{\"title\": \"\", \"source\": \"\"}]});\n    \n    useEffect(() => {\n        fetchSliderData(props.fileName)\n        .then(updateSliderData);\n    }, []);\n\n    const makeButton = (title:string, source:string) => {\n        return (\n            <button className = \"sliderOption\" onClick = {() => props.onClick(source)} >\n                {title} \n            </button>\n        );\n    } \n   \n    const makeButtons = (buttons: buttonPropsType[] ) => {\n        const len = buttons.length;\n        const rowCount = len % 2 ? (len + 1) / 2 : len / 2;\n        const titleAtIdx = (idx: number) => idx < len ? buttons[idx].title : \"\";\n        const sourceAtIdx = (idx: number) => idx < len ? buttons[idx].source : \"\";\n\n        return Array(rowCount).fill(0).reduce((acc, a, i) => {\n            return acc.concat([\n                <div>\n                    { makeButton(titleAtIdx(2 * i), sourceAtIdx(2 * i)) }\n                    { makeButton(titleAtIdx(2 * i + 1), sourceAtIdx(2 * i + 1)) }\n                </div>\n            ])\n        }, [])\n    } \n\n    return (\n        <div className = \"container-fluid debuge\">\n            <div  className = \"row\">\n                <div className = \"col-md-1\"></div>\n                <div className = \"col-md-auto sliderHead debuge\"> {sliderData.title} </div>\n                <div className = \"col sliderTail debuge\"> \n                    { makeButtons(sliderData.children) }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Slider;","import React, { useState } from 'react';\nimport Header from './Header';\nimport Slider from './Slider';\n\ntype sliderPropsType = {\n    \"fileName\" : string;\n}\n\nconst App = () => \n{\n    const [sliders, updateSliders] = useState([{\"fileName\" : \"VIVA.json\"}])\n\n    //function to add new slider with click\n    const handleClick = (fileName: string) => {\n        const newSliders = sliders.slice().concat([\n            {\"fileName\": fileName}\n        ]);\n\n        updateSliders(newSliders);\n    }\n\n    const createSlider = (sliderProps: sliderPropsType) => {\n        return (\n            <Slider \n                key = { sliderProps.fileName } \n                fileName = { sliderProps.fileName } \n                onClick = { handleClick }\n            />\n        );\n    }\n\n    return (\n        <div>\n            <Header />\n            { sliders.map(createSlider) }\n        </div>\n    )\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}