{"version":3,"sources":["Header.tsx","funcs.tsx","Slider.tsx","App.tsx","index.tsx"],"names":["Header","className","href","type","data-toggle","data-target","id","fetchSliderData","fileName","a","options","method","headers","body","JSON","stringify","fetch","then","res","json","Slider","props","useState","sliderData","updateSliderData","useEffect","title","children","map","v","buttonProps","App","sliders","sliderProps","ReactDOM","render","document","getElementById"],"mappings":"uLA2BeA,EAzBA,WAEX,OACI,sBAAKC,UAAY,0BAAjB,UACI,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,kBACA,wBAAQD,UAAU,6BAA6BE,KAAK,SAASC,cAAY,WAAWC,cAAY,mBAAhG,SACI,sBAAMJ,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BK,GAAG,kBAA7C,SACI,qBAAIL,UAAU,aAAd,UACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,oBAEJ,oBAAID,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,wBAEJ,oBAAID,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,8B,uBCCTK,EAlBM,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACdC,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,kCAEpBC,KAAMC,KAAKC,UAAU,CACjB,KAASP,KARG,kBAahBQ,MAAM,4BAA6BN,GAClCO,MAAK,SAACC,GAAD,OAASA,EAAIC,WAdH,2CAAH,sDCgCNC,EA9BA,SAACC,GACf,IAAD,EAC4CC,mBAAS,CAAC,MAAS,GAAI,SAAY,CAAC,CAAC,MAAS,GAAI,OAAU,OADxG,mBACWC,EADX,KACuBC,EADvB,KAGIC,qBAAU,WACNlB,EAAgBc,EAAMb,UACrBS,KAAKO,KACP,IAUH,OACI,qBAAKvB,UAAY,yBAAjB,SACI,sBAAMA,UAAY,MAAlB,UACI,qBAAKA,UAAY,aACjB,sBAAKA,UAAY,gCAAjB,cAAmDsB,EAAWG,MAA9D,OACA,qBAAKzB,UAAY,wBAAjB,SACMsB,EAAWI,SAASC,KAAI,SAACC,GAAD,OAdtBC,EAcwCD,EAZpD,qBAAK5B,UAAY,aAAjB,SACI,yBAAQA,UAAY,eAApB,cAAqC6B,EAAYJ,MAAjD,SAHO,IAACI,aCaTC,EAlBH,WACX,IAAD,EACqCT,mBAAS,CAAC,CAAC,SAAa,eAD7D,mBACWU,EADX,UASI,OACI,gCACI,cAAC,EAAD,IACEA,EAAQJ,KATG,SAACK,GAClB,OACI,cAAC,EAAD,CAAQzB,SAAayB,EAAYzB,kBCT7C0B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dc5fa4c7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => \n{\n    return (\n        <nav className = \"navbar navbar-expand-md\">\n            <a className=\"navbar-brand\" href=\"#\">VIVA</a>\n            <button className=\"navbar-toggler navbar-dark\" type=\"button\" data-toggle=\"collapse\" data-target=\"#main-navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"main-navigation\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Home</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Projects</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">About</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","import {sliderDataType} from './Types'\n\nconst fetchSliderData = async (fileName: string): Promise<sliderDataType> => {\n    const options = {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n        },\n        body: JSON.stringify({\n            \"file\" : fileName\n        })\n    };\n\n    return (\n        fetch(\"http://localhost:3000/api\", options)\n        .then((res) => res.json())\n    );\n}\n\nexport default fetchSliderData","import React, { useEffect, useState } from 'react'\nimport {sliderDataType, sliderPropsType, buttonPropsType} from './Types'\nimport fetchSliderData from './funcs'\n\nconst Slider = (props: sliderPropsType) => \n{\n    const [sliderData, updateSliderData]  = useState({\"title\": \"\", \"children\": [{\"title\": \"\", \"source\": \"\"}]});\n    \n    useEffect(() => {\n        fetchSliderData(props.fileName)\n        .then(updateSliderData);\n    }, []);\n   \n    const makeButton = (buttonProps: buttonPropsType) => {\n        return (\n            <div className = \"row debuge\"> \n                <button className = \"sliderOption\"> {buttonProps.title} </button> \n            </div>\n        )\n    } \n\n    return (\n        <div className = \"container-fluid debuge\">\n            <div  className = \"row\">\n                <div className = \"col-md-1\"></div>\n                <div className = \"col-md-auto sliderHead debuge\"> {sliderData.title} </div>\n                <div className = \"col sliderTail debuge\"> \n                    { sliderData.children.map((v) => makeButton(v)) }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Slider;","import React, { useState } from 'react';\nimport Header from './Header';\nimport Slider from './Slider';\n\ntype sliderPropsType = {\n    \"fileName\" : string;\n}\n\nconst App = () => \n{\n    const [sliders, updateSliders] = useState([{\"fileName\" : \"VIVA.json\"}])\n\n    const createSlider = (sliderProps: sliderPropsType) => {\n        return (\n            <Slider fileName = { sliderProps.fileName } />\n        );\n    }\n\n    return (\n        <div>\n            <Header />\n            { sliders.map(createSlider) }\n        </div>\n    )\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}